#【配置文件的生效顺序，会对值进行覆盖】
#1.@TestPropertySource 注解
#2.命令行参数
#3.Java系统属性（System.getProperties()）
#4.操作系统环境变量
#5.只有在random.*里包含的属性会产生一个RandomValuePropertySource
#6.在打包的jar外的应用程序配置文件（application.properties，包含YML和profile变量）
#7.在打包的jar内的应用程序配置文件（application.properties，包含YML和profile变量）
#8.在@Configuration类上的@PropertySource注解
#9.默认属性（使用SpringApplication.setDefaultProperties指定）

#【Application属性文件，按优先级排序，位置高的将覆盖位置低的】
#1.当前目录下的一个/config子目录
#2.当前目录
#3.一个classpath下的/config包
#4.classpath根路径（root）
#这个列表是按优先级排序的（列表中位置高的将覆盖位置低的）

#【比较全的默认约定配置参数说明】
#https://segmentfault.com/a/1190000004316491

#web server
server.port=8080
server.session-timeout=1000000
server.context-path=/springboot
server.tomcat.uri-encoding=UTF-8
server.tomcat.compression=on


#database


#datasource
spring.datasource.pool-prepared-statements=false//oracle open,mysql close
#指定updates是否自动提交.
spring.datasource.auto-commit=false
#是否自动提交.
spring.datasource.default-auto-commit=false
#指定JDBC URL.
#spring.datasource.url
#指定数据源名.
#spring.datasource.name
#指定数据库名.
#spring.datasource.username
#指定数据库密码.
#spring.datasource.password
#指定是否池化statements.
#指定连接的事务的默认隔离级别.
#spring.datasource.default-transaction-isolation
#指定driver的类名，默认从jdbc url中自动探测.
#spring.datasource.driver-class-name
#指定连接的超时时间，毫秒单位.
#spring.datasource.connection-timeout
#使用Tomcat connection pool，指定要设置的属性
#spring.datasource.db-properties
#当使用Tomcat connection pool是否打印校验错误.
#spring.datasource.log-validation-errors
#指定连接多久没被使用时，被设置为空闲，默认为10ms
#spring.datasource.idle-timeout
#指定启动连接池时，初始建立的连接数量
#spring.datasource.initial-size
#当创建连接池时，没法创建指定最小连接数量是否抛异常
#spring.datasource.initialization-fail-fast=true
#指定连接数据库的超时时间.
#spring.datasource.login-timeout
#指定连接池中最大的活跃连接数.
#spring.datasource.max-active
#指定连接池中连接的最大年龄
#spring.datasource.max-age
#指定连接池最大的空闲连接数量.
#spring.datasource.max-idle
#指定连接池中连接的最大生存时间，毫秒单位.
#spring.datasource.max-lifetime
#指定最大的打开的prepared statements数量.
#spring.datasource.max-open-prepared-statements
#指定连接池等待连接返回的最大等待时间，毫秒单位.
#spring.datasource.max-wait
#指定连接池最大的连接数，包括使用中的和空闲的连接.
#spring.datasource.maximum-pool-size
#指定一个空闲连接最少空闲多久后可被清除.
#spring.datasource.min-evictable-idle-time-millis
#指定必须保持连接的最小值(For DBCP and Tomcat connection pools)
#spring.datasource.min-idle


#logger
debug=true
#do not use the file name bogback.xml if you don't wanna to config with springboot style
#logging.config=classpath:logback-mine.xml
#logging.file=log.txt
#logging.path=log
#logging.exception-conversion-word=
logging.level.root=INFO
logging.level.org.springframework=DEBUG


#mongodb
#spring.data.mongodb.uri=mongodb://name:pass@localhost:27017/db1
spring.data.mongodb.uri=mongodb://localhost:27017/db1

#test
mytest.value=${random.value}
mytest.number=${random.int}
mytest.bignumber=${random.long}
mytest.test1=${random.int(10)}
mytest.test2=${random.int[10,20]}



#profile(must set at last)
spring.profiles.active=dev